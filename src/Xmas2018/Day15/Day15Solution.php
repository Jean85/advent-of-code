<?php

namespace Jean85\AdventOfCode\Xmas2018\Day15;

use Jean85\AdventOfCode\SolutionInterface;

class Day15Solution implements SolutionInterface
{
    private $input;

    /**
     * Day15Solution constructor.
     * @param $input
     */
    public function __construct(string $input = null)
    {
        $this->input = $input ?? $this->getDefaultInput();
    }

    public function solve()
    {
        ini_set('xdebug.max_nesting_level', 1024);
        $dungeon = new Dungeon($this->input);
        
        do {} while ($dungeon->tick());
        
        return $dungeon->getOutcome();
    }

    private function getDefaultInput(): string
    {
        return '################################
##############..##.#############
###############.##.#############
#####..G#######....#########..##
###......########..########...##
####..#G.#######.G...######...##
####......######...G.#####..####
#####......#####.....#.....G####
###.G..#.#..G..#.G.G....#.######
###..#...#.....G.......#########
###......#....##..........######
###..#.G.#....G...........######
####.G.......G#####......G######
#####....#G..#######.....#######
####........#########...######.#
#######.....#########E..######.#
########....#########.#..#####.#
########....#########E#.E.###..#
########..E.#########......E...#
#######......#######.....E.....#
#######..G....#####.......##.###
#######........G........E.######
#######....................#####
########...............#....####
########.....E..G......##.######
##...#..#.#............##.######
#G.#.#..#.....E........#########
#.................E....#########
###...............#...##########
#####.....#.........#.##########
#####...####.#..#..##..#########
################################';
    }

}
